------------------------------------------------------------------------
Funcion Ingresar, Modificar, Eliminar Procesos - Ceriv
------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION SPR_PROCESO(_ACCION INTEGER, _NOMBRE_PROCESO VARCHAR(100), _CODIGO_PROCESO INTEGER DEFAULT NULL)
RETURNS BOOLEAN AS
$BODY$
BEGIN
	IF (_ACCION = 1)THEN
		INSERT INTO PROCESO (NOMBRE_PROCESO, FLAG) VALUES (_NOMBRE_PROCESO , 1);
		RETURN TRUE;
	END IF;
	IF(_ACCION = 2)THEN
		UPDATE PROCESO SET
			NOMBRE_PROCESO = _NOMBRE_PROCESO
		WHERE CODIGO_PROCESO = _CODIGO_PROCESO;
		RETURN TRUE;
	END IF;
	IF(_ACCION = 3)THEN
		UPDATE PROCESO SET
			FLAG = 0
		WHERE CODIGO_PROCESO = _CODIGO_PROCESO;
		RETURN TRUE;
	END IF;
	EXCEPTION WHEN OTHERS THEN
		RETURN FALSE;
END;
$BODY$
LANGUAGE PLPGSQL;

------------------------------------------------------------------------
Funcion Ingresar, Modificar, Eliminar TRABAJADOR - Ceriv
------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION SPR_TRABAJADOR (_ACCION INTEGER, _DNI_TRABAJADOR INTEGER,_CODIGO_TIPO_TRABAJADOR INTEGER, _NOMBRE VARCHAR (50), _APELLIDO_PATERNO VARCHAR (100) , _APELLIDO_MATERNO VARCHAR (100), _CONTRA VARCHAR(300), _DNI_TRABAJADOR_NUEVO INTEGER DEFAULT NULL)
RETURNS BOOLEAN AS 
$BODY$
BEGIN
	IF (_ACCION = 1) THEN
		INSERT INTO TRABAJADOR (DNI_TRABAJADOR, CODIGO_TIPO_TRABAJADOR, NOMBRE, APELLIDO_PATERNO, APELLIDO_MATERNO, CONTRA, FLAG) VALUES (_DNI_TRABAJADOR, _CODIGO_TIPO_TRABAJADOR, _NOMBRE, _APELLIDO_PATERNO, _APELLIDO_MATERNO, _CONTRA, 1);
		RETURN TRUE;
	END IF;
	IF(_ACCION = 2) THEN
		UPDATE TRABAJADOR SET
			DNI_TRABAJADOR = _DNI_TRABAJADOR_NUEVO,
			CODIGO_TIPO_TRABAJADOR = _CODIGO_TIPO_TRABAJADOR,
			NOMBRE = _NOMBRE,
			APELLIDO_PATERNO = _APELLIDO_PATERNO,
			APELLIDO_MATERNO = _APELLIDO_MATERNO,
			CONTRA = _CONTRA
		WHERE DNI_TRABAJADOR = _DNI_TRABAJADOR;
		RETURN TRUE;
	END IF;
	IF(_ACCION = 3) THEN
		UPDATE TRABAJADOR SET
			FLAG = 0
		WHERE DNI_TRABAJADOR = _DNI_TRABAJADOR;
		RETURN TRUE;
	END IF;
	EXCEPTION WHEN UNIQUE_VIOLATION THEN
		UPDATE TRABAJADOR SET
			FLAG = 1
		WHERE DNI_TRABAJADOR = _DNI_TRABAJADOR;
		RETURN TRUE;
	WHEN OTHERS THEN
	RETURN FALSE;
END;
$BODY$
LANGUAGE PLPGSQL;

------------------------------------------------------------------------
Funcion Ingresar Y Modificar Persona - Titular - Ceriv
------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION SPR_PERSONATITULAR(_ACCION INTEGER, _CODIGO_DISTRITO INTEGER, _DOI_CLIENTE INTEGER, _NOMBRE_PERSONA VARCHAR (300), _APELLIDO_PATERNO VARCHAR (300), _APELLIDO_MATERNO VARCHAR(300), _NOMBRE_CONYUGE VARCHAR(300), _APELLIDO_PATERNO_CONYUGE VARCHAR (300), _APELLIDO_MATERNO_CONYUGE VARCHAR (300), _REPRESENTANTE VARCHAR (300), _DOMICILIO_PERSONA VARCHAR(500), _DIRECCION_ALTERNA VARCHAR (500), _CODIGO_PERSONA INTEGER DEFAULT NULL )
RETURNS BOOLEAN AS 
$BODY$
DECLARE 
	_GUARDARDOI INT;
BEGIN
	SELECT INTO _GUARDARDOI COUNT((DOI_CLIENTE)) FROM PERSONA WHERE DOI_CLIENTE = _CODIGO_PERSONA;
	IF(_GUARDARDOI = 0) THEN
		IF(_ACCION = 1) THEN
			INSERT INTO PERSONA (CODIGO_DISTRITO,DOI_CLIENTE,NOMBRE_PERSONA,APELLIDO_PATERNO,APELLIDO_MATERNO,NOMBRE_CONYUGE,APELLIDO_PATERNO_CONYUGE,APELLIDO_MATERNO_CONYUGE,REPRESENTANTE,DOMICILIO_PERSONA,DIRECCION_ALTERNA,FLAG)
			VALUES (_CODIGO_DISTRITO,_DOI_CLIENTE,_NOMBRE_PERSONA,_APELLIDO_PATERNO,_APELLIDO_MATERNO,_NOMBRE_CONYUGE,_APELLIDO_PATERNO_CONYUGE,_APELLIDO_MATERNO_CONYUGE,_REPRESENTANTE,_DOMICILIO_PERSONA,_DIRECCION_ALTERNA,1);
			RETURN TRUE;
		END IF;
	ELSE
		UPDATE PERSONA SET
			CODIGO_DISTRITO = _CODIGO_DISTRITO,
			DOI_CLIENTE = _DOI_CLIENTE,
			NOMBRE_PERSONA = _NOMBRE_PERSONA,
			APELLIDO_PATERNO = _APELLIDO_PATERNO,
			APELLIDO_MATERNO = _APELLIDO_MATERNO,
			NOMBRE_CONYUGE = _NOMBRE_CONYUGE,
			APELLIDO_PATERNO_CONYUGE = _APELLIDO_PATERNO_CONYUGE,
			APELLIDO_MATERNO_CONYUGE = _APELLIDO_MATERNO_CONYUGE,
			REPRESENTANTE = _REPRESENTANTE,
			DOMICILIO_PERSONA = _DOMICILIO_PERSONA,
			DIRECCION_ALTERNA = _DIRECCION_ALTERNA
		WHERE DOI_CLIENTE = _CODIGO_PERSONA;
	END IF;
	RETURN TRUE;
	EXCEPTION WHEN OTHERS THEN
		RETURN FALSE;
END;
$BODY$
LANGUAGE PLPGSQL;

------------------------------------------------------------------------
Funcion Ingresar Y Modificar  PERSONA - GARANTE - Ceriv
------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION SPR_PERSONAGARANTE(_ACCION INTEGER, _CODIGO_DISTRITO INTEGER, _NOMBRE_PERSONA VARCHAR(400), _APELLIDO_PATERNO VARCHAR(300),_APELLIDO_MATERNO VARCHAR(300), _NOMBRE_CONYUGE VARCHAR(300), _APELLIDO_PATERNO_CONYUGE VARCHAR(300), _APELLIDO_MATERNO_CONYUGE VARCHAR(300), _DOMICILIO_PERSONA VARCHAR (500), _OPERACION VARCHAR(300), _CODIGO_PERSONA INTEGER DEFAULT NULL)
RETURNS BOOLEAN AS
$BODY$
DECLARE
	_DNIGARANTE INT;
	_GUARDARDOI INT;
BEGIN
	SELECT INTO _GUARDARDOI COUNT(DOI_CLIENTE) FROM PERSONA WHERE DOI_CLIENTE = _CODIGO_PERSONA;
	IF(_GUARDARDOI = 0) THEN
		IF(_ACCION = 1) THEN
			SELECT INTO _DNIGARANTE(LAST_VALUE) FROM PERSONA_CODIGO_PERSONA_SEQ ;
			_DNIGARANTE = _DNIGARANTE + 1;
			INSERT INTO PERSONA(CODIGO_DISTRITO,DOI_CLIENTE,NOMBRE_PERSONA,APELLIDO_PATERNO,APELLIDO_MATERNO,NOMBRE_CONYUGE,APELLIDO_PATERNO_CONYUGE,APELLIDO_MATERNO_CONYUGE,DOMICILIO_PERSONA,OPERACION,FLAG) 
			VALUES (_CODIGO_DISTRITO,_DNIGARANTE,_NOMBRE_PERSONA,_APELLIDO_PATERNO,_APELLIDO_MATERNO,_NOMBRE_CONYUGE,_APELLIDO_PATERNO_CONYUGE,_APELLIDO_MATERNO_CONYUGE,_DOMICILIO_PERSONA,_OPERACION,2);
			RETURN TRUE;
		END IF;
	ELSE
		UPDATE PERSONA SET
			CODIGO_DISTRITO = _CODIGO_DISTRITO,
			NOMBRE_PERSONA = _NOMBRE_PERSONA,
			APELLIDO_PATERNO = _APELLIDO_PATERNO,
			APELLIDO_MATERNO  = _APELLIDO_MATERNO,
			NOMBRE_CONYUGE = _NOMBRE_CONYUGE,
			APELLIDO_PATERNO_CONYUGE = _APELLIDO_PATERNO_CONYUGE,
			APELLIDO_MATERNO_CONYUGE = _APELLIDO_MATERNO_CONYUGE,
			DOMICILIO_PERSONA = _DOMICILIO_PERSONA,
			OPERACION = _OPERACION
		WHERE DOI_CLIENTE = _CODIGO_PERSONA;
	END IF;
	RETURN TRUE;
	EXCEPTION WHEN OTHERS THEN
		RETURN FALSE;
END;
$BODY$
LANGUAGE PLPGSQL;
	
			
		
	EXCEPTION WHEN OTHERS THEN
		RETURN FALSE;
END;
$BODY$
LANGUAGE PLPGSQL;
	
------------------------------------------------------------------------
FUNCION INGRESAR Y MODIFICAR EXPEDIENTE - CERIV
------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION SPR_EXPEDIENTE(_ACCION INTEGER, _NUM_EXPEDIENTE INTEGER, _CODIGO_PROCESO INTEGER, _CODIGO_PERSONA INTEGER, _DNI_TRABAJADOR INTEGER, _TRABAJADOR_ABOGADO INTEGER, _TRABAJADOR_RESPONSABLE INTEGER, _TRABAJADOR_SECRETARIO VARCHAR(300), _NUM_EXPEDIENTE_22DIGITOS VARCHAR(300), _NUM_JUZGADO VARCHAR(300), _CODIGO_CAUTELAR VARCHAR(300), _FECHA_ASIGNACION DATE )
RETURNS BOOLEAN AS
$BODY$
BEGIN
	IF(_ACCION = 1) THEN
		INSERT INTO EXPEDIENTE(NUM_EXPEDIENTE, CODIGO_PROCESO, CODIGO_PERSONA, DNI_TRABAJADOR, TRABAJADOR_ABOGADO, TRABAJADOR_RESPONSABLE, TRABAJADOR_SECRETARIO, NUM_EXPEDIENTE_22DIGITOS, NUM_JUZGADO, CODIGO_CAUTELAR, FLAG, FECHA_ASIGNACION)
		VALUES (_NUM_EXPEDIENTE, _CODIGO_PROCESO, _CODIGO_PERSONA, _DNI_TRABAJADOR, _TRABAJADOR_ABOGADO, _TRABAJADOR_RESPONSABLE, _TRABAJADOR_SECRETARIO, _NUM_EXPEDIENTE_22DIGITOS, _NUM_JUZGADO, _CODIGO_CAUTELAR, 1, _FECHA_ASIGNACION);
		RETURN TRUE;
	END IF;
	EXCEPTION WHEN UNIQUE_VIOLATION THEN
		UPDATE EXPEDIENTE SET
			CODIGO_PROCESO = _CODIGO_PROCESO,
			CODIGO_PERSONA = _CODIGO_PERSONA,
			DNI_TRABAJADOR = _DNI_TRABAJADOR,
			TRABAJADOR_ABOGADO = _TRABAJADOR_ABOGADO,
			TRABAJADOR_RESPONSABLE = _TRABAJADOR_RESPONSABLE,
			TRABAJADOR_SECRETARIO = _TRABAJADOR_SECRETARIO,
			NUM_EXPEDIENTE_22DIGITOS = _NUM_EXPEDIENTE_22DIGITOS,
			NUM_JUZGADO = _NUM_JUZGADO,
			CODIGO_CAUTELAR = _CODIGO_CAUTELAR,
			FECHA_ASIGNACION = _FECHA_ASIGNACION
		WHERE NUM_EXPEDIENTE = _NUM_EXPEDIENTE;
		RETURN TRUE;
	WHEN OTHERS THEN 
	RETURN FALSE;
END;
$BODY$
LANGUAGE PLPGSQL;
	
------------------------------------------------------------------------
FUNCION INGRESAR, MODIFICAR, ELIMINAR CARTERA - CERIV
------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION SPR_CARTERA(_ACCION INTEGER, _NOMBRE VARCHAR(100), _CODIGO_CARTERA INTEGER DEFAULT NULL)
RETURNS BOOLEAN AS
$BODY$
BEGIN
	IF(_ACCION = 1)THEN
		INSERT INTO CARTERA(NOMBRE,FLAG) VALUES (_NOMBRE, 1);
		RETURN TRUE;
	END IF;
	IF(_ACCION = 2) THEN
		UPDATE CARTERA SET
			NOMBRE = _NOMBRE
		WHERE CODIGO_CARTERA= _CODIGO_CARTERA;
		RETURN TRUE;
	END IF;
	IF(_ACCION = 3)THEN
		UPDATE CARTERA SET
			FLAG = 0
		WHERE CODIGO_CARTERA = _CODIGO_CARTERA;
		RETURN TRUE;
	END IF;
	EXCEPTION WHEN OTHERS THEN
		RETURN FALSE;
END;
$BODY$
LANGUAGE PLPGSQL;

------------------------------------------------------------------------
FUNCION INGRESAR, MODIFICAR, ELIMINAR CIUDAD - CERIV
------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION SPR_CIUDAD(_ACCION INTEGER, _NOMBRE VARCHAR(100), _CODIGO_CIUDAD INTEGER DEFAULT NULL)
RETURNS BOOLEAN AS
$BODY$
BEGIN
	IF(_ACCION = 1)THEN
		INSERT INTO CIUDAD(NOMBRE,FLAG) VALUES (_NOMBRE, 1);
		RETURN TRUE;
	END IF;
	IF(_ACCION = 2) THEN
		UPDATE CIUDAD SET
			NOMBRE = _NOMBRE
		WHERE CODIGO_CIUDAD = _CODIGO_CIUDAD;
		RETURN TRUE;
	END IF;
	IF(_ACCION = 3)THEN
		UPDATE CIUDAD SET
			FLAG = 0
		WHERE CODIGO_CIUDAD = _CODIGO_CIUDAD;
		RETURN TRUE;
	END IF;
	EXCEPTION WHEN OTHERS THEN
		RETURN FALSE;
END;
$BODY$
LANGUAGE PLPGSQL;


------------------------------------------------------------------------
FUNCION INGRESAR, MODIFICAR, ELIMINAR ESTUDIO - CERIV
------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION SPR_ESTUDIO(_ACCION INTEGER, _NOMBRE VARCHAR(100), _CODIGO_ESTUDIO INTEGER DEFAULT NULL)
RETURNS BOOLEAN AS
$BODY$
BEGIN
	IF(_ACCION = 1)THEN
		INSERT INTO ESTUDIO (NOMBRE,FLAG) VALUES (_NOMBRE, 1);
		RETURN TRUE;
	END IF;
	IF(_ACCION = 2) THEN
		UPDATE ESTUDIO SET
			NOMBRE = _NOMBRE
		WHERE CODIGO_ESTUDIO = _CODIGO_ESTUDIO;
		RETURN TRUE;
	END IF;
	IF(_ACCION = 3)THEN
		UPDATE ESTUDIO SET
			FLAG = 0
		WHERE CODIGO_ESTUDIO = _CODIGO_ESTUDIO;
		RETURN TRUE;
	END IF;
	EXCEPTION WHEN OTHERS THEN
		RETURN FALSE;
END;
$BODY$
LANGUAGE PLPGSQL;

------------------------------------------------------------------------
FUNCION INGRESAR, MODIFICAR, ELIMINAR JUZGADO - CERIV
------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION SPR_JUZGADO(_ACCION INTEGER, _NOMBRE VARCHAR(100), _CODIGO_JUZGADO INTEGER DEFAULT NULL)
RETURNS BOOLEAN AS
$BODY$
BEGIN
	IF(_ACCION = 1)THEN
		INSERT INTO JUZGADO (NOMBRE,FLAG) VALUES (_NOMBRE, 1);
		RETURN TRUE;
	END IF;
	IF(_ACCION = 2) THEN
		UPDATE JUZGADO SET
			NOMBRE = _NOMBRE
		WHERE CODIGO_JUZGADO = _CODIGO_JUZGADO;
		RETURN TRUE;
	END IF;
	IF(_ACCION = 3)THEN
		UPDATE JUZGADO SET
			FLAG = 0
		WHERE CODIGO_JUZGADO = _CODIGO_JUZGADO;
		RETURN TRUE;
	END IF;
	EXCEPTION WHEN OTHERS THEN
		RETURN FALSE;
END;
$BODY$
LANGUAGE PLPGSQL;
